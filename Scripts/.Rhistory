knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(readr)
Morphology <- read_csv("../Data/Morphology data.csv")
#Look at the data
str(Morphology)
#I see there might be potential NAs so:
Morphology <- na.omit(Morphology)
#1. Fit the Model
Morph_lm <- lm(`Culmen (mm)` ~ `Tarsus (mm)`, data = Morphology)
#I see there might be potential NAs so:
Morphology <- na.omit(Morphology)
#1. Fit the Model
Morph_lm <- lm(`Culmen (mm)` ~ `Tarsus (mm)`, data = Morphology)
#Look at the data
str(Morphology)
#I see there might be potential NAs so:
Morphology <- na.omit(Morphology)
Morphology
Morphology <- read_csv("../Data/Morphology data.csv")
Morphology
Morphology
# I see NAs so I will exclude them in my function.
#1. Fit the Model
Morph_lm <- lm(`Culmen (mm)` ~ `Tarsus (mm)`, data = Morphology, na.action = na.exclude)
Morph_lm
#2. Test the assumptions
#Q-Q plot isn't too bad...
plot(Morph_lm, which = 2)
#Cooks distance looks like there might be outliers
plot(Morph_lm, which = 4)
#Distribution of residuals - doesn't look terrible. Normal distribution
residual_Morph <- residuals(Morph_lm)
hist(residual_Morph)
#3. Test it!
name_test1 <- anova(Morph_lm)
name_test2 <- summary(Morph_lm)
tidy(name_test1)
library(broom)
tidy(name_test1)
tidy(name_test2)
#4. Visualize
#First the scatter
Morph_scatter <- ggplot(data = Morphology,
mapping = aes(x = `Culmen (mm)`,
y = `Tarsus (mm)`)) +
geom_point()
#Add the regression line
Morph_scatter +
stat_smooth(method = lm, formula = y~x)
#Look at the data
hist(Morphology$`Tarsus (mm)`)
library(bbmle)
#Fit the Data, remember to exclude NA values
Morph_fit <- mle2(`Culmen (mm)` ~ dnorm(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 3, b1 = 3, resid_sd = 5))
#Fit the Data, remember to exclude NA values
Morph_fit <- mle2(`Culmen (mm)` ~ dnorm(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology, na.action = na.exclude,
start = list(b0 = 3, b1 = 3, resid_sd = 5))
#Check residual distribution
res <- residuals(Morph_fit)
Morphology <- na.exclude(Morphology)
#Fit the Data, remember to exclude NA values
Morph_fit <- mle2(`Culmen (mm)` ~ dnorm(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 3, b1 = 3, resid_sd = 5))
#Check residual distribution
res <- residuals(Morph_fit)
qqnorm(res_dist)
#Check residual distribution
res_dist <- residuals(Morph_fit)
qqnorm(res_dist)
library(dplyr)
library(purrr)
library(broom)
Morphology <- Morphology[-c(`Sex`, `NOTES`)]
Morphology <- read_csv("../Data/Morphology data.csv")
Morphology <- Morphology[-c(`Sex`, `NOTES`)]
Morphology <- Morphology[-c(`NOTES`)]
str(Morphology)
Morphology <- Morphology[-c(10)]
Morphology
#There are NAs and certain columns that we will not be using so I will restructure the data to omit unneeded columns.
Morphology <- Morphology[-c(2:5, 8:10)]
Morphology <- read_csv("../Data/Morphology data.csv")
#There are NAs and certain columns that we will not be using so I will restructure the data to omit unneeded columns.
Morphology <- Morphology[-c(2:5, 8:10)]
Morphology
#There are NAs and certain columns that we will not be using so I will restructure the data to omit unneeded columns.
Morphology <- Morphology[-c(2:5, 8:10)] %>%
na.omit()
Morphology <- read_csv("../Data/Morphology data.csv")
#There are NAs and certain columns that we will not be using so I will restructure the data to omit unneeded columns.
Morphology <- Morphology[-c(2:5, 8:10)] %>%
na.omit()
Morphology
#1. Fit the Model
Morph_lm <- lm(`Culmen (mm)` ~ `Tarsus (mm)`, data = Morphology)
#2. Test the assumptions
#Q-Q plot isn't too bad...
plot(Morph_lm, which = 2)
#Cooks distance looks like there might be outliers
plot(Morph_lm, which = 4)
#Distribution of residuals - doesn't look terrible. Normal distribution
residual_Morph <- residuals(Morph_lm)
hist(residual_Morph)
#3. Test it!
name_test1 <- anova(Morph_lm)
name_test2 <- summary(Morph_lm)
tidy(name_test1)
tidy(name_test2)
#4. Visualize
#First the scatter
Morph_scatter <- ggplot(data = Morphology,
mapping = aes(x = `Culmen (mm)`,
y = `Tarsus (mm)`)) +
geom_point()
#Add the regression line
Morph_scatter +
stat_smooth(method = lm, formula = y~x)
#Look at the data
hist(Morphology$`Tarsus (mm)`)
library(bbmle)
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dnorm(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 3, b1 = 3, resid_sd = 5))
#Look at the data
hist(Morphology$`Tarsus (mm)`)
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dpois(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 3, b1 = 3, resid_sd = 5))
#It looks a bit skewed so I will use a Poisson Distribution in my fit.
library(bbmle)
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dpois(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 3, b1 = 3, resid_sd = 5))
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dpois(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 5, b1 = 3, resid_sd = 5))
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dpois(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 5, b1 = 3, resid_sd = 10))
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dnorm(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 7, b1 = 7, resid_sd = 5))
#Look at the data
hist(Morphology$`Tarsus (mm)`)
#Fit the Data
Morph_fit <- mle2(`Culmen (mm)` ~ dnorm(b0 + b1 * `Tarsus (mm)`,
resid_sd),
data = Morphology,
start = list(b0 = 10, b1 = 15, resid_sd = 5))
#Create a function
norm_likelihood <- function(obs, mean_est, sd_est) {
#data generating process
est <- mean_est
#log likelihood
sum(dnorm(obs, mean = est, sd = sd_est, log = TRUE))
}
#Look at the data
hist(Morphology$`Tarsus (mm)`)
#Use crossing to generate a set of parameters to test
morph_dist <- crossing(m = seq(27, 35, by = 0.1),
s = seq(4, 7, by = 0.1)) %>%
rowwise() %>%
mutate(log_lik = norm_likelihood(obs = Morphology$`Tarsus (mm)`, mean_est = m, sd_est = s)) %>%
ungroup()
#Find the MLE
morph_dist %>%
filter(log_lik == max(log_lik))
#Profile for Confidence Intervals
morph_sd_profile <- morph_dist %>%
group_by(s) %>%
filter(log_lik == max(log_lik)) %>%
ungroup()
#Plot it
qplot(s, log_lik, data = morph_sd_profile, geom = "line")
#This looks like an assimtote - so should I not be using log likelihood? I don't know.
#Get CI
morph_sd_profile %>%
filter(log_lik > max(log_lik) - 1.92) %>%
filter(row_number() == 1 | row_number()==n())
morph_mle <- glm(`Culmen (mm)` ~ `Tarsus (mm)`, family = gaussian(link = "identity"), data = Morphology)
morph_mle
#Test the assumptions
fitted <- predict(morph_mle)
res <- residuals(morph_mle)
qplot(fitted, res)
qplot(fitted, res) +
stat_smooth()
#Look at QQ Plot
qqnorm(res)
qqline(res)
qqline(res)
#Look at QQ Plot
qqnorm(res)
qqline(res)
hist(res)
#Profile
library(MASS)
plot(profile(morph_mle))
#Get CIs and such
library(profileModel)
prof <- profileModel(morph_mle, objective = "ordinaryDeviance")
plot(prof)
#Find our coefficients
summary(morph_mle)
#Find our coefficients
tidy(morph_mle)
confint(morph_mle)
#Compare our model to null
morph_mle_null <- glm(`Tarsus (mm)` ~ 1,
family = gaussian(link = "identity"),
data = Morphology)
anova(morph_mle_null, morph_mle, test = "LRT")
#Plot the fit
ggplot(Morphology,
mapping = aes(x = `Tarsus (mm)`, y = `Culmen (mm)`)) +
geom_point() +
stat_smooth(method = "glm", method.args = list(family = gaussian(link = "identity")))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(readr)
library(broom)
library(dplyr)
library(purrr)
library(broom)
library(bbmle)
library(MASS)
library(profileModel)
#Least Squares
tidy(Morph_lm)
confint(Morph_lm)
#Likelihood
tidy(morph_mle)
confint(morph_mle, method = "quad")
confint(Morph_lm)
#Likelihood
tidy(morph_mle)
confint(morph_mle, method = "quad")
